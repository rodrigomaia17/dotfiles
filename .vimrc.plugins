set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
" call vundle#begin('~/.config/nvim/bundle')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
call vundle#end()            " required
filetype plugin indent on    " required

Plugin 'takac/vim-hardtime'

Plugin 'scrooloose/nerdtree'
map <C-e> :NERDTreeToggle<CR>
map <leader>e :NERDTreeFind<CR>
nmap <leader>nt :NERDTreeFind<CR>

let NERDTreeShowBookmarks=1
let NERDTreeIgnore=['\.py[cd]$', '\~$', '\.swo$', '\.swp$', '^\.git$','^\.hg$', '^\.svn$', '\.bzr$']
let NERDTreeChDirMode=0
let NERDTreeQuitOnOpen=1
let NERDTreeMouseMode=2
let NERDTreeShowHidden=1
let NERDTreeKeepTreeInNewTab=1
let g:nerdtree_tabs_open_on_gui_startup=0
let g:syntastic_html_tidy_ignore_errors = [ '<template> is not recognized!']

Plugin 'ctrlpvim/ctrlp.vim'
let g:ctrlp_open_func = { 'files': 'CustomOpenFunc' }
function! CustomOpenFunc(action, line)
  call call('ctrlp#acceptfile', [':t', a:line])
endfunction
let g:ctrlp_prompt_mappings = {
      \ 'AcceptSelection("e")': ['<c-t>'],
      \ 'AcceptSelection("t")': ['<cr>', '<2-LeftMouse>'],
      \ }


Plugin 'scrooloose/syntastic'
autocmd BufNewFile,BufReadPost *.md set filetype=markdown
autocmd BufNewFile,BufReadPost *.elm set filetype=elm 
filetype plugin on

Plugin 'scrooloose/nerdcommenter'

Plugin 'easymotion/vim-easymotion'
nmap s <Plug>(easymotion-s)

Plugin 'dracula/vim'
syntax on
color dracula
Plugin 'terryma/vim-multiple-cursors'

Plugin 'rking/ag.vim'
let g:ag_working_path_mode="r"

Plugin 'airblade/vim-gitgutter'
